import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import BlogItem from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem from "../components/ProductItem";
import { BlogType, ProductType } from "../interfaces/interfaces";

interface Props {
  productData: ProductType[];
  blogData: BlogType[];
}

const Search: NextPage<Props> = ({ productData, blogData }) => {
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Search" />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          {/* blogs  */}
          <h2 className="mb-5">Blogs</h2>

          {blogData.length < 1 ? (
            <p className="mb-5">
              There are no blogs comparing with your Search..
            </p>
          ) : (
            <>
              <div className="row isotope-grid">
                {blogData.map((blog) => {
                  return (
                    <div className="col-4 " key={blog.id}>
                      <BlogItem {...blog} />
                    </div>
                  );
                })}
              </div>
            </>
          )}

          {/* products */}
          <h2 className="mb-5">Products</h2>

          {productData.length < 1 ? (
            <p>There are no products comparing with your Search..</p>
          ) : (
            <>
              <div className="row isotope-grid">
                {productData.map((product) => {
                  return <ProductItem key={product.id} product={product} />;
                })}
              </div>
            </>
          )}
        </div>
      </div>
    </>
  );
};

export default Search;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let productData: ProductType[] = [];
  let blogData: BlogType[] = [];

  if (query.q) {
    const productRes = await fetch(
      `http://localhost:5001/products?q=${query.q}`
    );
    const blogRes = await fetch(`http://localhost:5001/blogs?q=${query.q}`);

    productData = await productRes.json();
    blogData = await blogRes.json();
  }

  return {
    props: { productData, blogData },
  };
};
